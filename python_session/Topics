{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Higher Order functions\n",
    "# First Class functions\n",
    "# try and exceptions\n",
    "# functional programming\n",
    "# side effect\n",
    "# purity\n",
    "# mutation\n",
    "# Lambda- Map, filter, Reduce\n",
    "# recursion\n",
    "# yield\n",
    "# co-routines and sub-routines\n",
    "# functools module\n",
    "# Iter Object\n",
    "# stop iteration in for loop\n",
    "# for loop internal process\n",
    "# break and continue \n",
    "# Context manager\n",
    "# Open(), write(),with open,read and write operations -- Context Manager\n",
    "# Counter\n",
    "# docstrings\n",
    "# dictionary internal functioning and hash tab;e code\n",
    "# "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Built-In Module\n",
    "# 1. Math\n",
    "# 2. OS\n",
    "# 3. Collections"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "10%2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
